name: Publish Python Package

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers the workflow on new version tags

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Specify the Python version you need

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Get the version tag
        id: vars
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build package
        run: |
          cd pygchat
          python setup.py sdist bdist_wheel

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Realese ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pygchat/dist/pygchat-${{ env.VERSION }}-py3-none-any.whl
          asset_name: pygchat-${{ env.VERSION }}-py3-none-any.whl
          asset_content_type: application/zip

      - name: Upload Source Distribution
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pygchat/dist/pygchat-${{ env.VERSION }}.tar.gz
          asset_name: pygchat-${{ env.VERSION }}.tar.gz
          asset_content_type: application/gzip
