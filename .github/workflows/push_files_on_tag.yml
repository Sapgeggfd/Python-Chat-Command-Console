name: Push Files on Tag

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0, v2.1.0, etc.

jobs:
  push_files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure the full history is fetched so we can access tags

      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      - name: Setup Folder
        run: |
          mkdir selected_files
          cd selected_files

      - name: Select files to push
        run: |
          cp -r pygchat selected_files/pygchat
          cp README.md selected_files/

      - name: Commit selected files
        run: |
          cd selected_files
          git init
          git remote add origin https://github.com/${{ github.repository }}.git
          git checkout -b Releases
          git add .
          git commit -m "Add selected files on tag ${{ github.ref_name }}"
          
      - name: Push to Releases branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd selected_files
          cd pygchat
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git Releases --force
        # New
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Get the version tag
        id: vars
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build package
        run: |
          cd pygchat
          python setup.py sdist bdist_wheel

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Realese ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          
          asset_path: ./pygchat/dist/pygchat-${{ env.VERSION }}-py3-none-any.whl
          asset_name: pygchat-${{ env.VERSION }}-py3-none-any.whl
          asset_content_type: application/zip

      - name: Upload Source Distribution
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pygchat/dist/pygchat-${{ env.VERSION }}.tar.gz
          asset_name: pygchat-${{ env.VERSION }}.tar.gz
          asset_content_type: application/gzip